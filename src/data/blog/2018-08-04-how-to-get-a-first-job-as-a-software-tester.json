{
  "id": "2018-08-04-how-to-get-a-first-job-as-a-software-tester",
  "title": "How to get a first job as a software tester?",
  "date": "2018-08-04",
  "categories": [
    "Testing thoughts"
  ],
  "tags": [
    "testing thoughts"
  ],
  "permalink": "/2018/08/how-to-get-first-job-as-software-tester",
  "content": "<p><img src=\"/images/blog/code-944499_1280.jpg\" alt=\"\" style=\"width: 100%;\"></p>\n<p>Numerous times people ask me how to get first job as a software tester. I have already written very<br>popular &#39;<a href=\"https://www.awesome-testing.com/2016/06/how-to-become-software-tester.html\" target=\"_blank\" rel=\"noreferrer\">How to become a software tester</a>&#39;<br>post, but after many offline discussions I want to change emphasis a bit. Don&#39;t get me wrong - those are still good<br>advises. Unfortunately, whether we like it or not, job market is constantly evolving and one particular skill is in top<br>demand now: programming.</p>\n<h2>Do you want to be a tester or do you want to work in IT industry?</h2>\n<p>Maybe it&#39;s just me, but most of the people I advised about first testing job weren&#39;t particularly interested in<br>software quality. They wanted to join IT industry, so the question they were seeking an answer was in reality:</p>\n<p><em>How to get a first job in IT industry?</em></p>\n<p>After reading (or hearing?) that software testing in the easiest path into IT they changed the question for:</p>\n<p><em>How to get a first job as a software tester?</em></p>\n<p>My first advice for such people is very simple. Don&#39;t focus solely on testing. Try to get a job as a junior developer,<br>junior devops, service desk support, IT support or any other position. By this simple move you increase your job chances<br>substantially. Junior software tester jobs are very scarce, but whole IT is looking for new talent all the time.</p>\n<p>One particular skill increases your chance of hiring on each of those positions (including software testing):<br>programming.</p>\n<h2>Why junior positions are relatively hard to find in IT industry?</h2>\n<p>People who don&#39;t work in IT (yet?) often find it surprising that a lot of companies are very reluctant to hire people on<br>junior roles. They are lesser paid so who not? There are a couple of reasons:</p>\n<p><em>a) Juniors require skilled assistance</em></p>\n<p>Before junior engineer becomes productive a lot of training and assistance is required. Those activities are usually<br>conducted by senior (high paid) engineers so financial benefit of hiring a junior is quickly diminished.  </p>\n<p><em>b) Work in IT demands to make a lot of long-term consequences decisions</em></p>\n<p>Every engineer usually makes a lot of decisions almost every day. Which framework, language or tool to choose? How to<br>implement it? How to test it? Junior engineers are obviously poorly qualified to make such decisions and senior<br>assistance is once again required.</p>\n<p><em>c) Trained juniors very often leave to better paid jobs just after they become productive</em></p>\n<p>This may actually be the most important reason. After all those efforts related to training they can simply leave.</p>\n<h2>Why programming?</h2>\n<p>My readers know that I&#39;m a huge fan<br>of<a href=\"https://www.amazon.com/Nassim-Nicholas-Taleb/e/B000APVZ7W\" target=\"_blank\" rel=\"noreferrer\">Nassim Nicholas Taleb</a>. In one post I even explained<br>how <a href=\"https://www.awesome-testing.com/2018/02/testops-most-antifragile-testing-role.html\" target=\"_blank\" rel=\"noreferrer\">TestOps role is the most antifragile</a>.<br>I don&#39;t want to repeat myself, but just a quick summary. Being antifragile means to protect yourself from low<br>probability events (examples: always insurance your house, don&#39;t build your house on flooding area, diversify you<br>income, don&#39;t store all your money on one bank account) and allow yourself to benefit from low probability events (<br>examples: invest small amount on high-risk affairs, write a blog, build a website, start a podcast, attend conference as<br>a speaker). The more things you do, the higher chance that one of them may succeed.</p>\n<p>If I explained antifragility concept correct you may already know why I recommend learning programming. By gaining<br>technical knowledge (programming is not only coding, but also environment setup etc.) you are increasing your chances of<br>getting hired in almost every IT company as a engineer.</p>\n<h2>Conclusion</h2>\n<p>Conclusion is very simple. If you want to join IT learn coding :)</p>\n"
}