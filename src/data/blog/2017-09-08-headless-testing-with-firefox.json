{
  "id": "2017-09-08-headless-testing-with-firefox",
  "title": "Headless testing with Firefox",
  "date": "2017-09-08",
  "categories": [
    "Selenium"
  ],
  "tags": [
    "selenium"
  ],
  "permalink": "/2017/09/headless-testing-with-firefox",
  "content": "<img src=\"/images/blog/firefox.jpg\" alt=\"\">\n\n<p>Last week I wanted to show you how to run Selenium tests using headless Firefox. Unfortunately my <a href=\"http://www.awesome-testing.com/2016/02/selenium-browser-capabilities-explained.html\" target=\"_blank\" rel=\"noreferrer\">Browser Capabilities</a>turned out to be outdated so I opted for correct <a href=\"http://www.awesome-testing.com/2017/09/firefox-selenium-browser-capabilities.html\" target=\"_blank\" rel=\"noreferrer\">Firefox Selenium Browser Capabilities</a><br>explanation instead.</p><p>It turned out that most of the work was done already and I just needed few minutes to run Firefox in headless mode. Here is how I did it.</p><h2>Getting started - requirements</h2>\n<p>According to <a href=\"https://developer.mozilla.org/en-US/Firefox/Headless_mode\" target=\"_blank\" rel=\"noreferrer\">official Mozilla guide</a>you need Firefox 55+ on Linux and Firefox 56+ on Windows/Mac.</p><p>I&#39;m currently using Windows, so I had to download <a href=\"https://www.mozilla.org/en-US/firefox/56.0beta/releasenotes/\" target=\"_blank\" rel=\"noreferrer\">Firefox 56 beta</a> first (stable version is 55).</p><h2>Headless Firefox configuration</h2>\n<p>My code from last week was almost sufficient. I only needed to add one option (--headless). Configuration is almost identical as in <a href=\"http://www.awesome-testing.com/2017/05/headless-testing-with-google-chrome.html\" target=\"_blank\" rel=\"noreferrer\">Chrome</a>.</p><pre><code class=\"hljs language-java\">\n    <span class=\"hljs-meta\">@Override</span>\n        <span class=\"hljs-keyword\">public</span> WebDriver <span class=\"hljs-title function_\">newWebDriver</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FirefoxDriver</span>(getFirefoxCapabilities());\n    }\n\n    <span class=\"hljs-keyword\">private</span> DesiredCapabilities <span class=\"hljs-title function_\">getFirefoxCapabilities</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">DesiredCapabilities</span> <span class=\"hljs-variable\">capabilities</span> <span class=\"hljs-operator\">=</span> DesiredCapabilities.firefox();\n        capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS, getFirefoxOptions());\n        <span class=\"hljs-keyword\">return</span> capabilities;\n    }\n\n    <span class=\"hljs-keyword\">private</span> FirefoxOptions <span class=\"hljs-title function_\">getFirefoxOptions</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">FirefoxOptions</span> <span class=\"hljs-variable\">options</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FirefoxOptions</span>();\n        options.addArguments(<span class=\"hljs-string\">&quot;--headless&quot;</span>);\n        <span class=\"hljs-keyword\">return</span> options;\n    }\n</code></pre><h2>Demo</h2>\n<p>As usual, I prepared quick demo for my readers. I run it few times in headless/non-headless mode on my local machine and didn&#39;t observe any time differences. Still the main benefit of headless testing is ease of use on Unix machines. We don&#39;t have to install xvfb and other tools related to graphic environment.</p><p>Demo is testing that only 5 posts is displayed on my homepage.</p><p>PageObject code:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-meta\">@PageUrl(&quot;http://www.awesome-testing.com&quot;)</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AwesomeTestingPage</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">FluentPage</span> {\n\n    <span class=\"hljs-meta\">@FindBy(css = &quot;[alt=&#x27;Awesome Testing&#x27;]&quot;)</span>\n    <span class=\"hljs-keyword\">private</span> FluentWebElement logo;\n\n    <span class=\"hljs-meta\">@FindBy(css = &quot;h1.post-title&quot;)</span>\n    <span class=\"hljs-keyword\">private</span> FluentList&lt;FluentWebElement&gt; postTitle;\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">isAt</span><span class=\"hljs-params\">()</span> {\n        await().atMost(<span class=\"hljs-number\">5</span>, TimeUnit.SECONDS).until(logo).displayed();\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">assertThatCorrectNumberOfPostsIsDisplayed</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> numberOfPosts)</span> {\n        await().until(postTitle).displayed();\n        assertThat(postTitle.size()).isEqualTo(numberOfPosts);\n    }\n}\n</code></pre><p>Class in which I configure Firefox browser:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FirefoxManipulator</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">FluentTestNg</span> {\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">MY_GECKO_PATH</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;C:\\\\drivers\\\\geckodriver.exe&quot;</span>;\n\n    <span class=\"hljs-meta\">@BeforeTest</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setUp</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-keyword\">if</span> (SystemUtils.IS_OS_WINDOWS) {\n            System.setProperty(<span class=\"hljs-string\">&quot;webdriver.gecko.driver&quot;</span>, MY_GECKO_PATH);\n        }\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">public</span> WebDriver <span class=\"hljs-title function_\">newWebDriver</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FirefoxDriver</span>(getFirefoxCapabilities());\n    }\n\n    <span class=\"hljs-keyword\">private</span> DesiredCapabilities <span class=\"hljs-title function_\">getFirefoxCapabilities</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">DesiredCapabilities</span> <span class=\"hljs-variable\">capabilities</span> <span class=\"hljs-operator\">=</span> DesiredCapabilities.firefox();\n        capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS, getFirefoxOptions());\n        <span class=\"hljs-keyword\">return</span> capabilities;\n    }\n\n    <span class=\"hljs-keyword\">private</span> FirefoxOptions <span class=\"hljs-title function_\">getFirefoxOptions</span><span class=\"hljs-params\">()</span> {\n        <span class=\"hljs-type\">FirefoxOptions</span> <span class=\"hljs-variable\">options</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FirefoxOptions</span>();\n        options.addArguments(<span class=\"hljs-string\">&quot;--headless&quot;</span>);\n        <span class=\"hljs-keyword\">return</span> options;\n    }\n}\n</code></pre><p>Actual test code:</p><pre><code class=\"hljs language-java\">\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HeadlessFirefoxDemoTest</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">FirefoxManipulator</span> {\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">EXPECTED_NUMBER_OF_POSTS</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">5</span>;\n\n    <span class=\"hljs-meta\">@Page</span>\n    <span class=\"hljs-keyword\">private</span> AwesomeTestingPage awesomeTestingPage;\n\n    <span class=\"hljs-meta\">@Test</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">correctNumberOfPostsShouldBeDisplayed</span><span class=\"hljs-params\">()</span> {\n        goTo(awesomeTestingPage)\n                .assertThatCorrectNumberOfPostsIsDisplayed(EXPECTED_NUMBER_OF_POSTS);\n    }\n\n}\n</code></pre><p>As usual, I posted all the code from above in my<a href=\"https://github.com/slawekradzyminski/AwesomeTesting\" target=\"_blank\" rel=\"noreferrer\">GitHub Awesome Testing project</a>.</p>"
}