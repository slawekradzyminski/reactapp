{
  "id": "2018-08-25-on-being-multiskilled",
  "title": "On being multiskilled",
  "date": "2018-08-25",
  "category": "Testing thoughts",
  "permalink": "/2018/10/on-being-multiskilled",
  "content": "<img src=\"/images/blog/negative-space-programming-code-javascript-editor-boskampi-thumb-1.jpg\" alt=\"\">\n\n<h3>Introduction</h3>\n<p>One of the simple things you can do to increase your job market value is to acquire skills required for multiple positions. On my blog, I have already promoted such approach (<br>see <a href=\"https://www.awesome-testing.com/2018/08/how-to-get-first-job-as-software-tester.html\" target=\"_blank\" rel=\"noreferrer\">How to get a first job as a tester?</a><br>for beginners and <a href=\"https://www.awesome-testing.com/2018/02/testops-most-antifragile-testing-role.html\" target=\"_blank\" rel=\"noreferrer\">Testops - the most antifragile testing role</a><br>for more experienced testers). Today I’d like to show you how to put it into practice. I have collected a few tips from multiple fields to make the list more complete.</p><h3>No not overestimate things you already know</h3>\n<p>IT industry has multiple branches and it’s literally impossible to know them all. This may be a bit sad realization, but I bet you can’t quickly fill product owner/developer/team lead shoes. Think about it. Surely there is still a lot of knowledge to discover.</p><p>Some people lose the ability to see what’s missing in their skills as they get older. They stick to old habits,<br>frameworks, ways of working which become more and more obsolete each passing year. This is very dangerous because they not only stop adding value in the current place of work but also lose employability. Do not allow such thing to happen.<br>Train your mind &amp; body daily.</p><h3>Accept different point of views</h3>\n<p>In theory, we love to share and hear experiences of others during various technical conferences. In practice though, we often struggle to emphasize with others. I don’t know why, but I know few people who never say ‘I’m wrong’. For example,<br>I’m writing those words knowing that I may make mistakes… and there is absolutely nothing wrong with that. This shouldn’t discourage you from reading further, because you still may benefit from this text on multiple fronts:</p><ul>\n<li>you may realize that your knowledge starts to be obsolete</li>\n<li>you may start to volunteer for new, challenging tasks</li>\n<li>you consider this post so terrible and start writing your own blog just to prove you can do it better than me</li>\n</ul>\n<h3>Volunteer for new tasks</h3>\n<p>During workdays, test engineers have to tackle various tasks: easy, mundane, challenging, time-consuming, weird, boring etc. Occasionally something completely new pops out and we need to find someone ready for a challenge. Our natural inclination is to behave like during school questioning: heads down, eyes on the ground, ‘please let it be someone else’<br>prayers murmured. Instead of acting as others step up and volunteer yourself. There is a high chance that not everyone in your team read my blog, and you will be able to work on new stuff.</p><h3>Do the same things differently</h3>\n<p>We are creatures of habit (see great <a href=\"https://www.amazon.com/gp/product/081298160X\" target=\"_blank\" rel=\"noreferrer\">Charles Duhigg</a> book).<br>Unfortunately, habits can be both positive (like brushing your teeth) and negative (smoking). If we do things the same way every day we start to behave like brainless robots (we stop noticing changes around us… have you ever missed a new road sign on your typical work route?). In our industry it can be dangerous - we stop exercising our brain and start clicking like machines. Try to break such negative spiral by doing something in a different way. Try new language, use curl instead of python to create HTTP requests, cover functionality on unit tests level, rewrite tests on the lower level, introduce contract testing, try mutation testing, use Java 8 lambdas etc. Experiment as often as possible.</p><h3>Perseverance &amp; Grit</h3>\n<blockquote class=\"blog-quote\"><p>Grit in psychology is a positive, non-cognitive trait based on an individual&#39;s perseverance of effort combined with</p><p></p><p>the passion for a particular long-term goal or end state (a powerful motivation to achieve an objective).</p><p></p></blockquote><p>Usually, when we start something new we have a lot of energy, enthusiasm and are generally very positive about the outcome. Unfortunately, this spike tends to disappear after more and more silly problems slow us down. That’s pretty much how new year’s resolutions work.</p><p>In your quest to become multidisciplinary you need to learn how to persevere and don’t get discouraged by obstacles.<br>Personally, I find physical activities very helpful in this regard. By training the body, a mind gets stronger as well.</p><p>Why not just accept the fact that doing something entirely new would be time-consuming, frustrating and hard? We may call it StackOverflow Driven Development (SDD).</p><h3>Explore unknown unknowns</h3>\n<p>There is a nice article on <a href=\"https://www.ministryoftesting.com/dojo/lessons/not-sure-about-uncertainty\" target=\"_blank\" rel=\"noreferrer\">Ministry of Testing</a> about Risk-based Testing. The author introduces four quadrants which may help us manage risk &amp; testing in our projects.</p><img src=\"/images/blog/slide2.png\" alt=\"\">\n\n<p>The same quadrants map nicely our knowledge. Usually we focus only on ‘Known’ sections, but in fact, by exploring<br>‘Unknowns’ we can gain much more. Reading blogs, attending conferences, attending meetups or having conversations in testing communities allow you to discover something entirely new (Unknown Unknown).</p><h3>Adopt beginner&#39;s mind</h3>\n<blockquote class=\"blog-quote\"><p>Shoshin (初心) is a word from <a href=\"https://en.wikipedia.org/wiki/Zen_Buddhism\" target=\"_blank\" rel=\"noreferrer\">Zen Buddhism</a> meaning &quot;beginner&#39;s mind.&quot; It</p><p></p><p>refers to having an attitude of openness, eagerness, and lack of preconceptions when studying a subject, even when</p><p></p><p>studying at an advanced level, just as a beginner would.</p><p></p></blockquote><p>My son has just become 10 months old. It was very pleased to observe his crawling efforts. At first, it looked like he’s trapped in a body that can’t handle his energy, but now he roams the flat freely with an ever-present smile. He never got discouraged, he was just trying every single day and finally succeeded.</p><p>As we grow older we lose this ability. We are afraid of failure, scared or just too lazy to challenge ourselves. Try to rediscover this childish trait and experiment freely without too much worry.</p><h3>Just do it… and have realistic expectations</h3>\n<p>Usain Bolt (famous sprinter) started playing football lately. He even was on trial in Australian West Coast Mariners team. He was even offered a contract… which he rejected <a href=\"https://www.foxsports.com.au/football/a-league/report-usain-bolt-and-central-coast-mariners-set-to-part-ways-after-contract-offer-was-rejected/news-story/3556ed1a37f3d6857ea45d14d17523db?fbclid=IwAR2URpS-z5Z8cbkV50WSY5qqS5ANDiMnFWE8GmP0ZB1IoV6vEU2MGqcF8PE&nk=a74b8630a39c1f4c47f16bea224d956e-1541174584\" target=\"_blank\" rel=\"noreferrer\">demanding 20 times</a><br>higher wages.</p><p>It’s an interesting example of how you should not approach learning. It’s impossible to jump straight from being a beginner into an expert. Some scientists that amount of effort required for mastery oscillates about <a href=\"http://www.pgbovine.net/1000-hour-rule.htm\" target=\"_blank\" rel=\"noreferrer\">1000 hours</a> mark.</p><p>Remember that being an expert in Java 7 has entirely different value than being an expert in programming or software architecture. You can’t achieve the latter without multiple skills. Learn new stuff!</p>"
}