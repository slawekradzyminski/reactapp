{
  "id": "2017-09-29-firefox-selenium-browser-capabilities-explained",
  "title": "Firefox Selenium Browser Capabilities explained",
  "date": "2017-09-29",
  "categories": [
    "Selenium"
  ],
  "tags": [
    "selenium"
  ],
  "permalink": "/2017/09/firefox-selenium-browser-capabilities",
  "content": "<p><img src=\"/images/blog/firefox.jpg\" alt=\"\" style=\"width: 100%;\"></p>\n<p>Two very important Firefox news related to Selenium were published recently:<br>a) Selenium IDE will no longer be supported in Firefox<br>55+ (<a href=\"https://seleniumhq.wordpress.com/2017/08/09/firefox-55-and-selenium-ide/\" target=\"_blank\" rel=\"noreferrer\">source</a>)<br>b) Headless mode is now available (<a href=\"https://developer.mozilla.org/en-US/Firefox/Headless_mode\" target=\"_blank\" rel=\"noreferrer\">source</a>)</p>\n<p>First news isn&#39;t really that bad. Any time invested in IDE is basically wasted time, so I don&#39;t think there is too much<br>to worry.</p>\n<p>Second news is exciting though. I already announced it before in<br>my <a href=\"http://www.awesome-testing.com/2017/05/headless-testing-with-google-chrome.html\" target=\"_blank\" rel=\"noreferrer\">Headless Chrome</a> before, but now<br>it&#39;s live and ready to play with.</p>\n<p>To be honest this post was meant to be about Headless Firefox, but upon testing it and using my code<br>from <a href=\"http://www.awesome-testing.com/2016/02/selenium-browser-capabilities-explained.html\" target=\"_blank\" rel=\"noreferrer\">Browser Capabilities explained</a><br>post I realized it&#39;s no longer valid. Using Firefox Profiles is now deprecated. From now on we should rely on Browser<br>Capabilities and very familiar mechanism as the one already implemented for Chrome. The code changed very recently,<br>because even official Java example in <a href=\"https://developer.mozilla.org/en-US/Firefox/Headless_mode\" target=\"_blank\" rel=\"noreferrer\">headless Firefox news</a><br>is using deprecated methods.</p>\n<p>Before I delve deeper into headless mode (which I&#39;ll publish this month) let me show new way of handling Firefox browser<br>in your test.</p>\n<h2>Getting started with Gecko Driver</h2>\n<p>As you probably already know at first you need<br>to <a href=\"https://github.com/mozilla/geckodriver/releases\" target=\"_blank\" rel=\"noreferrer\">download geckodriver</a>. On Mac it can be done be very quickly<br>using <a href=\"https://brew.sh/index_pl.html\" target=\"_blank\" rel=\"noreferrer\">brew</a>.</p>\n<pre><code class=\"language-java\">private static final String MY_GECKO_PATH = &quot;C:\\\\drivers\\\\geckodriver.exe&quot;;\n\n    @BeforeTest\n    public void setUp() {\n        if (SystemUtils.IS_OS_WINDOWS) {\n            System.setProperty(&quot;webdriver.gecko.driver&quot;, MY_GECKO_PATH);\n        }\n    }\n</code></pre>\n<p>Windows users have to also set gecko property (it&#39;s done automatically by brew on Mac).</p>\n<h2>Using Firefox Browser Capabilities</h2>\n<p>Using Firefox browser capabilities looks exactly as in Chrome. I&#39;m sure my readers are already very familiar with how I<br>handle capabilities. The code almost like copy/paste from my Chrome examples.</p>\n<pre><code class=\"language-java\">private static final String HOMEPAGE_KEY = &quot;browser.startup.homepage&quot;;\n    private static final String HOMEPAGE_VALUE = &quot;www.google.pl&quot;;\n\n    @Override\n    public WebDriver newWebDriver() {\n        return new FirefoxDriver(getFirefoxCapabilities());\n    }\n\n    private DesiredCapabilities getFirefoxCapabilities() {\n        DesiredCapabilities capabilities = DesiredCapabilities.firefox();\n        capabilities.setAcceptInsecureCerts(true);\n        capabilities.setCapability(HOMEPAGE_KEY, HOMEPAGE_VALUE);\n        capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS, getFirefoxOptions());\n        return capabilities;\n    }\n\n    private FirefoxOptions getFirefoxOptions() {\n        FirefoxOptions options = new FirefoxOptions();\n        options.setLogLevel(Level.WARNING);\n        return options;\n    }\n</code></pre>\n<p>Thankfully we no longer have to rely on flaky Firefox Profile solution. What&#39;s even better, especially comparing to<br>Chrome, is documentation. <a href=\"https://github.com/mozilla/geckodriver\" target=\"_blank\" rel=\"noreferrer\">GeckoDriver GitHub page</a> have it covered very well. I<br>encourage you to take a look.</p>\n<p>As usual I posted all the code from above in<br>my <a href=\"https://github.com/slawekradzyminski/AwesomeTesting/commit/e9c3470f8a7c2cebc962701b1cf901fe9766f54d\" target=\"_blank\" rel=\"noreferrer\">GitHub Awesome Testing project</a>.</p>\n"
}