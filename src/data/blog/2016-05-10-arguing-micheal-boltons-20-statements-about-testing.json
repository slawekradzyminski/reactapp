{
  "id": "2016-05-10-arguing-micheal-boltons-20-statements-about-testing",
  "title": "Arguing Micheal Bolton's 20 statements about testing",
  "date": "2016-05-10",
  "category": "Testing thoughts",
  "permalink": "/2016/05/arguing-micheal-boltons-20-statements",
  "content": "<p><a href=\"https://twitter.com/michaelbolton/\" target=\"_blank\" rel=\"noreferrer\">Michael Bolton</a>, one of the most recognized testers worldwide (assuming we take into account the number of followers), has recently published 20 very interesting tweets on his account. This leads to a very interesting <a href=\"https://twitter.com/michaelbolton/status/730748174734901248\" target=\"_blank\" rel=\"noreferrer\">discussion</a>, which I recommend reading too. Unfortunately, Twitter wasn&#39;t designed for such lengthy conversations and it&#39;s hard to grasp what&#39;s going on there. Don&#39;t get me wrong though, I like <a href=\"https://twitter.com/s_radzyminski\" target=\"_blank\" rel=\"noreferrer\">Twitter</a> and you should too. It seems like most of the IT professionals use it every day and share quality stuff there.</p><br>\n\n<p>The thing is, as much as I consider those statements valuable and interesting (hence they&#39;re all cited here), I can&#39;t fully agree with all of them. Twitter char limitation (140) isn&#39;t enough to express my doubts, so let&#39;s move the discussion to the blog world.<br><br><br><br><strong>Edit:</strong> It seems like I may have taken Michael&#39;s words out of context, which I hadn&#39;t been aware of. Turns out, his views on testing are pretty much like mine. See the comments for clarification.</p><blockquote class=\"blog-quote\"><p>1. Testing&#39;s value will never be /immediately/ clear to everyone, nor will everyone want testers as such. I believe we must accept that.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730748174734901248\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Such a negative and disempowering statement. I had already talked about the ever-changing <a href=\"http://awesome-testing.blogspot.com/2016/02/dos-and-donts-for-testers-2016-edition.html\" target=\"_blank\" rel=\"noreferrer\">tester&#39;s role</a> these days. Yesterday I had a pleasure to listen to <a href=\"https://twitter.com/mfeathers\" target=\"_blank\" rel=\"noreferrer\">Micheal Feathers&#39;</a> talk on Geecon titled &#39;Testing patience&#39;. I managed to capture the key slide from the talk (see below). Why would we strip ourselves from the power to redefine testers&#39; role in IT? It&#39;s pretty much in our hands.</p><br>\n\n<img src=\"/images/blog/IMG_0098-2.JPG\" alt=\"\">\n\n<br>\n\n<blockquote class=\"blog-quote\"><p>2. When we are describing testing&#39;s value, we had better be clear on the extents and limits of what testing (and testers) can accomplish.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730749931439423488\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Fully agree. Testers aren&#39;t magicians and saviors. They won&#39;t change the flawed design by night. They can however point out the problems early.<br><br><br></p><blockquote class=\"blog-quote\"><p>3. As a tester, I can make people aware of problems in the product of project. I do not have the authority to make them fix those problems.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730750264416817154\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>This is again a surprisingly disempowering statement. Testers should be part of the team with all the privileges and responsibilities. If production is down I don&#39;t see why testers should not actively seek root cause and solution. Especially when they have vast experience using the system.<br><br><br></p><blockquote class=\"blog-quote\"><p>4. I do have the capacity to experiment, explore, infer, imagine, inform, or advise. I don&#39;t have the power to mandate people to do things.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730751136043520000\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Agree. Some time ago it fashionable to treat testers as quality gatekeepers. It simply <a href=\"https://danashby.co.uk/2014/08/06/dispelling-the-misconceptions-1-testers-are-not-gatekeepers/\" target=\"_blank\" rel=\"noreferrer\">didn&#39;t work</a>.<br><br><br></p><blockquote class=\"blog-quote\"><p>5. By acknowledging (4) immediately, I want to avoid this question: &quot;We&#39;ve got *testers*; why are there still problems in the product?&quot;</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730751753327628288\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Classic fingerprinting problem. That&#39;s why testers were integrated into development teams and gatekeeper concept buried. <a href=\"http://jamieflinchbaugh.com/2011/04/who-is-responsible-for-quality/\" target=\"_blank\" rel=\"noreferrer\">Everyone is responsible for quality</a>.<br><br><br><br><br></p><blockquote class=\"blog-quote\"><p>7. I help teams to defend the value of products, discovering and alerting them to critical problems that they might not notice without me.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730754116453040128\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Nice. I like that.<br><br><br></p><blockquote class=\"blog-quote\"><p>8. That (7) said, I try to maintain both epistemic and political humility. Oh-oh; weird words. Let&#39;s unpack those.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730755653116022784\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Yeah, sometimes it&#39;s not easy to show problems. Especially when the teams are remote and we have additional cultural differences. That&#39;s why books like <a href=\"https://leanpub.com/thepsychologyofsoftwaretesting\" target=\"_blank\" rel=\"noreferrer\">the psychology of software testing</a> are needed.<br><br><br><br><br></p><blockquote class=\"blog-quote\"><p>10. &quot;Political humility&quot; means acknowledging that I don&#39;t control the code, the product scope, the project, or people. I am not Authority.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730756856243687425\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Again, psychological stuff. Software development is <a href=\"http://awesome-bookreviews.blogspot.com/2016/02/team-geek-software-developers-guide-to.html\" target=\"_blank\" rel=\"noreferrer\">a social activity</a> with all its nuances...<br><br><br></p><blockquote class=\"blog-quote\"><p>11. If I believe that I exert control, pain will follow. I may annoy those who do have authority; they may ignore me and I&#39;ll be frustrated.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730757930421760000\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Not sure about that. It seems like an error during exerting control. In mature companies, this shouldn&#39;t be the case.<br><br><br></p><blockquote class=\"blog-quote\"><p>12. I must therefore establish my role and my commitments such that others *invite* my help, rather than me inflicting help on them.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730758308634738689\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Obvious. There is no such thing as unwelcome help.<br><br><br></p><blockquote class=\"blog-quote\"><p>13. Part of that, to me, requires me to acknowledge that they write the code, fix the problems, manage the project, make the decisions.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730758970030342145\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>We fix the problems. We make the decisions. Why would we distance ourselves from the problems?<br><br><br></p><blockquote class=\"blog-quote\"><p>14. I help them to notice problems.When they change things, they—not I—prevent those problems from turning into worse problems. I *help*.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730759498902736897\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>We change things, we prevent the problems. Testers help throughout every project phase.<br><br><br></p><blockquote class=\"blog-quote\"><p>15. When I acknowledge that I help them prevent problems, I empower them; I acknowledge their roles and responsibilities respectfully.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730760043218472960\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Don&#39;t like that. Strict role borders lead to <a href=\"https://dzone.com/articles/waste-4-handoffs\" target=\"_blank\" rel=\"noreferrer\">handoff waste</a>. We should aim at as much blurring of roles as possible in software development. That&#39;s much more efficient.<br><br><br></p><blockquote class=\"blog-quote\"><p>17. To say &quot;I help others to prevent problems&quot; puts credit where credit is due. To say &quot;I prevent problems&quot; is to seize credit from people.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730761097125498880\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><br>\nWe can prevent problems. Just like everyone in the project. Not sure why we would disrespect someone by doing that.<br>\n\n<br>\n\n<blockquote class=\"blog-quote\"><p>19. I can develop code, write documentation, participate in reviews, etc., etc. I&#39;m not shirking any work here; far from it.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730763149163499520\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Those statements seem like a contradiction to #13 and all those disempowering before.  Finally, an acknowledgment that the testing role can be very broad. Fully agree.<br><br><br></p><blockquote class=\"blog-quote\"><p>20. If we&#39;re talking about my testing role, I don&#39;t commission the painting; don&#39;t grab the brush from the artist; don&#39;t take undue credit.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730764097759891456\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>We should take credit and responsibility just like everyone else in the company (including HR girls). Testers are no exception here.</p>"
}