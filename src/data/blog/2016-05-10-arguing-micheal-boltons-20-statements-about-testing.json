{
  "id": "2016-05-10-arguing-micheal-boltons-20-statements-about-testing",
  "title": "Arguing Micheal Bolton's 20 statements about testing",
  "date": "2016-05-10",
  "category": "Testing thoughts",
  "permalink": "/2016/05/arguing-micheal-boltons-20-statements",
  "content": "<p><a href=\"https://twitter.com/michaelbolton/\" target=\"_blank\" rel=\"noreferrer\">Michael Bolton</a>, one of the most recognized testers worldwide (assuming we take into account the number of followers), has recently published 20 very interesting tweets on his account. This leads to a very interesting <a href=\"https://twitter.com/michaelbolton/status/730748174734901248\" target=\"_blank\" rel=\"noreferrer\">discussion</a>, which I recommend reading too. Unfortunately, Twitter wasn&#39;t designed for such lengthy conversations and it&#39;s hard to grasp what&#39;s going on there. Don&#39;t get me wrong though, I like <a href=\"https://twitter.com/s_radzyminski\" target=\"_blank\" rel=\"noreferrer\">Twitter</a> and you should too. It seems like most of the IT professionals use it every day and share quality stuff there.</p><p>The thing is, as much as I consider those statements valuable and interesting (hence they&#39;re all cited here), I can&#39;t fully agree with all of them. Twitter char limitation (140) isn&#39;t enough to express my doubts, so let&#39;s move the discussion to the blog world.</p><p><strong>Edit:</strong> It seems like I may have taken Michael&#39;s words out of context, which I hadn&#39;t been aware of. Turns out, his views on testing are pretty much like mine. See the comments for clarification.</p><blockquote class=\"blog-quote\"><p>1. Testing&#39;s value will never be /immediately/ clear to everyone, nor will everyone want testers as such. I believe we must accept that.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730748174734901248\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Such a negative and disempowering statement. I had already talked about the ever-changing <a href=\"http://awesome-testing.blogspot.com/2016/02/dos-and-donts-for-testers-2016-edition.html\" target=\"_blank\" rel=\"noreferrer\">tester&#39;s role</a> these days. Yesterday I had a pleasure to listen to <a href=\"https://twitter.com/mfeathers\" target=\"_blank\" rel=\"noreferrer\">Micheal Feathers&#39;</a> talk on Geecon titled &#39;Testing patience&#39;. I managed to capture the key slide from the talk (see below). Why would we strip ourselves from the power to redefine testers&#39; role in IT? It&#39;s pretty much in our hands.</p><img src=\"/images/blog/IMG_0098-2.JPG\" alt=\"\">\n\n<blockquote class=\"blog-quote\"><p>2. When we are describing testing&#39;s value, we had better be clear on the extents and limits of what testing (and testers) can accomplish.</p><p></p><p></p><p></p><p>— Michael Bolton (@michaelbolton) <a href=\"https://twitter.com/michaelbolton/status/730749931439423488\" target=\"_blank\" rel=\"noreferrer\">May 12, 2016</a></p><p></p></blockquote><p>Fully agree. Testers aren&#39;t magicians and saviors. They won&#39;t change the flawed design by night. They can however point out the problems early.</p>"
}