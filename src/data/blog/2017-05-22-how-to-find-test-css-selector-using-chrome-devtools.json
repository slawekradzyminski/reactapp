{
  "id": "2017-05-22-how-to-find-test-css-selector-using-chrome-devtools",
  "title": "How to find & test CSS Selector using Chrome DevTools",
  "date": "2017-05-22",
  "categories": [
    "Selenium"
  ],
  "tags": [
    "CSS selectors",
    "selenium"
  ],
  "permalink": "/2017/05/how-to-find-test-cssselector-using",
  "content": "<p><img src=\"/images/blog/maxresdefault.jpg\" alt=\"\" style=\"width: 100%;\"></p>\n<p>I was surprised after seeing a couple of questions regarding selector verification. This triggered me to create this<br>basic tutorial which hopefully would be useful for test automation newcomers.</p>\n<p>As a prerequisite you need to download &amp; install <a href=\"https://www.google.com/chrome/\" target=\"_blank\" rel=\"noreferrer\">Google Chrome</a> browser (if not done<br>already).</p>\n<h2>Chrome Developer Tools</h2>\n<p>Throughout this tutorial we would be using <a href=\"https://developer.chrome.com/devtools\" target=\"_blank\" rel=\"noreferrer\">Chrome DevTools</a>. In order to access<br>it you need to press the following keys in Chrome:<br>a) Ctrl + Shift + I on Windows<br>b) Cmd + Opt (Alt)+ I on Mac</p>\n<p>You should see something like this (DevTools may also open at the bottom of the page)</p>\n<p><img src=\"/images/blog/awesometesting.png\" alt=\"\" style=\"width: 100%;\"></p>\n<p>Assuming you are testing websites I strongly advise you to get familiar with every single option. We would be using only<br>two tabs:<br>a) Elements - page source used to find proper selectors<br>b) Console - browser console in which we would test our selectors</p>\n<h3>CSS selector example A</h3>\n<p>Let&#39;s start with CSS selectors as they&#39;re usually shorter and easier to understand than XPath. Here are the steps to get<br>header CSS selector:</p>\n<p>a) Rightclick on header (big A) and pick Inspect - this should highlight header element in Elements tab</p>\n<p><img src=\"/images/blog/inspect.png\" alt=\"\" style=\"width: 100%;\"></p>\n<p>b) Rightclick on highlighted code and pick Copy -&gt; Copy selector</p>\n<p><img src=\"/images/blog/selector.png\" alt=\"\" style=\"width: 100%;\"></p>\n<p>c) Open Console tab</p>\n<p>d) Type $$(&quot;&quot;) and paste copied selector between quotation marks. You should get something like this.</p>\n<p><img src=\"/images/blog/css.png\" alt=\"\" style=\"width: 100%;\"></p>\n<p>Thanks to those nice Chrome DevTools features we were able to find selector and also test it. This is very helpful<br>especially when we have to deal with something more complicated.</p>\n<h3>CSS selector example B</h3>\n<p>That was easy. Now let&#39;s assume we want to make sure number of displayed posts equals 5 on homepage. In order to achieve<br>that I need to find post title selector and make sure it occurs exactly 5 times. Here are steps:</p>\n<p>a) Inspecting element in Chrome DevTools leads us here</p>\n<p><img src=\"/images/blog/posttitle.png\" alt=\"\" style=\"width: 100%;\"></p>\n<p>b) I&#39;m seeing that all titles are <em>h1</em> and with class <em>post-title</em>. What&#39;s the selector then? It&#39;s <em>h1.post-title</em></p>\n<p>c) Verification in Console confirms that we have found proper selector.</p>\n<p><img src=\"/images/blog/posttitle2.png\" alt=\"\" style=\"width: 100%;\"></p>\n<h3>How can I learn how to build CSS Selectors?</h3>\n<p>There is good and free tutorial available on w3schools site. It&#39;s extremely important for every aspiring test engineer<br>to get familiar with it. It&#39;s a must have... especially before job interview :)</p>\n<p><a href=\"https://www.w3schools.com/cssref/css_selectors.asp\" target=\"_blank\" rel=\"noreferrer\">https://www.w3schools.com/cssref/css_selectors.asp</a></p>\n<h2>Demo in Java</h2>\n<p>I have prepared working demo for my readers. You can find it on my<br>GitHub <a href=\"https://github.com/slawekradzyminski/AwesomeTesting\" target=\"_blank\" rel=\"noreferrer\">Awesome Testing project.</a>I&#39;m using FluentLenium and Page<br>Object Pattern framework. That&#39;s how the HomePage class would look like.</p>\n<pre><code class=\"language-java\">@PageUrl(&quot;http://www.awesome-testing.com/&quot;)\npublic class HomePage extends FluentPage {\n\n    @FindBy(css = &quot;#Header1_headerimg&quot;)\n    private FluentWebElement header;\n\n    @FindBy(css = &quot;h1.post-title&quot;)\n    private FluentList&lt;FluentWebElement&gt; pageTitles;\n\n    public void assertThatHeaderIsDisplayed() {\n        assertThat(header).isDisplayed();\n    }\n\n    public void assertThatNumberOFTitlesEquals(int numberOfTitles) {\n        assertThat(pageTitles).hasSize(numberOfTitles);\n    }\n}\n</code></pre>\n<p>And two simple tests. You should understand them instantly (at least that was my aim).</p>\n<pre><code class=\"language-java\">public class BlogTest extends FluentTestNg {\n\n    private static final int EXPECTED_NUMBER_OF_POSTS = 5;\n\n    @Page\n    private HomePage homePage;\n\n    @Override\n    public WebDriver newWebDriver() {\n        return new ChromeDriver();\n    }\n\n    @Test\n    public void shouldDisplayHeader() {\n        homePage.go();\n        homePage.assertThatHeaderIsDisplayed();\n    }\n\n    @Test\n    public void shouldBeFivePosts() {\n        homePage.go();\n        homePage.assertThatNumberOFTitlesEquals(EXPECTED_NUMBER_OF_POSTS);\n    }\n\n}\n</code></pre>\n"
}