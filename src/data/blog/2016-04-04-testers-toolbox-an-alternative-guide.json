{
  "id": "2016-04-04-testers-toolbox-an-alternative-guide",
  "title": "Tester's toolbox - an alternative guide",
  "date": "2016-04-04",
  "category": "Toolbox",
  "permalink": "/2016/04/testers-toolbox-alternative-guide",
  "content": "<img src=\"/images/blog/bob.png\" alt=\"\">\n\n<p>When you type &#39;test tools&#39; in Google you can see a lot of links to Selenium, cURL, Cucumber, or even Firefox. I agree they are useful, but we are testers, and we shouldn&#39;t test tools, but real systems. Below I give a lot of links to playgrounds when you can train your skills. I hope this will help you to understand that you should always pair &#39;test tool&#39; with the system you test, not vice-versa. Also, in my opinion, by solving real problems you learn faster than by following tutorials.</p><h2>GUI testing</h2>\n<ul>\n<li><p><a href=\"http://automationpractice.com/\" target=\"_blank\" rel=\"noreferrer\">automationpractice.com</a>- This is a virtual shop that was designed for testing purposes only (unfortunately it&#39;s in maintenance mode as I write this post...)</p></li>\n<li><p><a href=\"http://the-internet.herokuapp.com/\" target=\"_blank\" rel=\"noreferrer\">the-internet.herokuapp.com</a> - Fantastic site with real exercises :)</p></li>\n</ul>\n<p>Use the same sites for Mobile app testing.</p><h2>API testing</h2>\n<ul>\n<li><p><a href=\"http://httpbin.org/\" target=\"_blank\" rel=\"noreferrer\">httpbin.org</a>- Fantastic resource for everyone tired of flaky GUI tests and wants to go lower. All endpoint responses (except /XML) are JSON-encoded.</p></li>\n<li><p><a href=\"http://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"noreferrer\">jsonplaceholder.typicode.com</a>- Fake online REST API for testing and prototyping. I have a few tests written against Java + RestAssured. I will show them in one of the future posts.</p></li>\n<li><p><a href=\"http://requestb.in/\" target=\"_blank\" rel=\"noreferrer\">requestb.in</a>- Testing POST requests I be tricky sometimes. This site allows you to generate a private endpoint where you can send everything you want. All that can be verified in a human-friendly way.</p></li>\n</ul>\n<h2>Integration &amp; Unit testing</h2>\n<p>I believe this should be mainly developers&#39; duty, but it wouldn&#39;t be bad to have some skills in this area too. Don&#39;t look for online tutorials, just exercise your app, or delve into framework code (deeper understanding may help you write better tests on higher levels as well).</p><p>Examples: <a href=\"https://github.com/SeleniumHQ/selenium\" target=\"_blank\" rel=\"noreferrer\">Selenium</a>, <a href=\"https://github.com/jayway/rest-assured\" target=\"_blank\" rel=\"noreferrer\">RestAssured</a>, <a href=\"https://github.com/appium/appium\" target=\"_blank\" rel=\"noreferrer\">Appium</a>.</p><h2>White-box code internal testing</h2>\n<ul>\n<li><a href=\"http://www.javadeathmatch.com/\" target=\"_blank\" rel=\"noreferrer\">www.javadeathmatch.com</a>- a cool site that allows you to identify code smells. It even has multiplayer mode :)</li>\n</ul>\n<h2>Mail testing</h2>\n<ul>\n<li><a href=\"http://mapil.co/\" target=\"_blank\" rel=\"noreferrer\">mapil.co</a>- As a tester, you probably know how annoying and time-consuming testing emails can be. Mail can make it smoother - it stores emails for us and allows us to query them using custom API.</li>\n</ul>\n<h2>Text messages and call services testing</h2>\n<ul>\n<li><a href=\"http://tropo.com/\" target=\"_blank\" rel=\"noreferrer\">tropo.com</a>- Tropo adds communications features to your app with just a few lines of code. Free for development &amp; testing.</li>\n</ul>\n<h2>BDD, Cucumber &amp; other frameworks</h2>\n<ul>\n<li><a href=\"http://www.softwaretestinghelp.com/cucumber-bdd-tool-selenium-tutorial-30/\" target=\"_blank\" rel=\"noreferrer\">www.softwaretestinghelp.com</a>- This is a little bit tricky because BDD requires clearly defined use cases. I managed to find them here.</li>\n</ul>\n<h2>Testing basics - writing test cases</h2>\n<ul>\n<li><a href=\"http://testingchallenges.thetestingmap.org/\" target=\"_blank\" rel=\"noreferrer\">testingchallenges.thetestingmap.org</a>- The site has few exercises which all you to identify all the tests required for given scenarios, and then evaluate it. Mostly for beginners.</li>\n</ul>\n<h2>Usability testing (user testing)</h2>\n<ul>\n<li><a href=\"https://www.nngroup.com/articles/task-scenarios-usability-testing/\" target=\"_blank\" rel=\"noreferrer\">nngroup.com</a>- this is tricky once again. Try to identify scenarios for your app &amp; context using those tips. Really cool article</li>\n</ul>\n<h2>Penetration testing</h2>\n<p>The hacking community seems to be very active and resource-rich. If you want to train you can easily find quite a few resources. Let me give you just a couple of them (most of them from <a href=\"http://sekurak.pl/trenowanie-testow-penetracyjnych-na-zywych-systemach/\" target=\"_blank\" rel=\"noreferrer\">the sekurak</a>polish security portal).</p><ul>\n<li><p><a href=\"http://21ltr.com/2012/06/19/21LTR-Scene-One-LiveCD/\" target=\"_blank\" rel=\"noreferrer\">21LTR</a></p></li>\n<li><p><a href=\"http://pentestlab.org/project/lab-in-a-box/\" target=\"_blank\" rel=\"noreferrer\">PenTestLaboratory</a></p></li>\n<li><p><a href=\"https://exploit-exercises.com/\" target=\"_blank\" rel=\"noreferrer\">Exploit Exercise</a></p></li>\n<li><p><a href=\"https://www.offensive-security.com/metasploit-unleashed/requirements/\" target=\"_blank\" rel=\"noreferrer\">Metasploit</a></p></li>\n<li><p><a href=\"https://www.hackthissite.org/\" target=\"_blank\" rel=\"noreferrer\">Hack This Site</a></p></li>\n<li><p><a href=\"http://www.gameofhacks.com/\" target=\"_blank\" rel=\"noreferrer\">Game of Hacks</a></p></li>\n</ul>\n<h2>Text testing</h2>\n<ul>\n<li><a href=\"http://texttest.sourceforge.net/index.php?page=main\" target=\"_blank\" rel=\"noreferrer\">Text Test</a>- If you want to compare texts (like log outputs) this tool is for you. TextTest is an open-source tool for text-based functional testing.</li>\n</ul>\n<h2>Performance, load, stress testing</h2>\n<p>I didn&#39;t manage to find any punching bags. Any suggestions? It seems like you have to stick with your own website or app.</p><p><strong>But I want to learn a few things first...</strong></p><p>Ok, here are some awesome links :)</p><ul>\n<li><p><a href=\"https://github.com/Vedenin/useful-java-links/#iv-testing\" target=\"_blank\" rel=\"noreferrer\">Useful Java Links</a>- Fantastic list of useful Java frameworks, libraries, software, and hello worlds examples. If Java is your main language you should really check it.</p></li>\n<li><p><a href=\"https://github.com/atinfo/awesome-test-automation\" target=\"_blank\" rel=\"noreferrer\">Awesome Test Automation</a>- A curated list of awesome test automation frameworks, tools, libraries, and software for different programming languages. In many programming languages.</p></li>\n<li><p><a href=\"https://github.com/enaqx/awesome-pentest\" target=\"_blank\" rel=\"noreferrer\">Awesome Penetration Testing</a>- A collection of awesome penetration testing resources.</p></li>\n</ul>\n<p>The list is by no means complete. What else can you suggest?</p>"
}