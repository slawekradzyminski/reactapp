{
  "id": "2018-03-08-five-minutes-performance-report-with-google-lighthouse",
  "title": "Five minutes performance report with Google Lighthouse",
  "date": "2018-03-08",
  "category": "Performance testing",
  "permalink": "/2018/03/five-minutes-performance-report-with",
  "content": "<p>With little disappointment I realised today that I haven&#39;t done a single post about performance testing (in almost 3 years of blogging!). Today I&#39;d like to change that by introducing you with simple, yet powerful, performance tool called <a href=\"https://github.com/GoogleChrome/lighthouse\" target=\"_blank\" rel=\"noreferrer\">Lighthouse</a>. According to developers:</p><blockquote class=\"blog-quote\"><p>Lighthouse analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices.</p><p></p></blockquote><p>In case you are short on time choose Lighthouse. You only needâ€¦ 5 minutes to make Desktop &amp; Mobile report. Lighthouse opens Chrome browser and gathers all useful metrics from <a href=\"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/\" target=\"_blank\" rel=\"noreferrer\">Chrome Dev Tools</a>.</p><h2>Setup</h2>\n<p>Installation couldn&#39;t be easier. First you need npm (get it from <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noreferrer\">here</a>) and then type:</p><p><code>npm install -g lighthouse</code></p><h2>Generating report</h2>\n<p>Now we need only two commands in order to get reports.</p><p>a) Desktop</p><p><code>lighthouse https://www.awesome-testing.com --disable-device-emulation --disable-cpu-throttling --disable-network-throttling --view</code></p><p>You can view generated reports here:</p><p><a href=\"https://htmlpreview.github.io/?https://github.com/slawekradzyminski/AwesomeTesting/blob/b453b50f7f2a1d2826d632edf7fc74a5fdce35f6/src/test/java/com/awesome/testing/performance/lighthouse/Desktop-report.html\" target=\"_blank\" rel=\"noreferrer\">Link to Lighthouse Desktop report</a></p><p>b) Mobile</p><p><code>lighthouse https://www.awesome-testing.com --disable-network-throttling --view</code></p><p>You may want to get rid of <code>--disable-network-throttling option</code> in order to simulate 3G connection.</p><p>You can view generated reports here:</p><p><a href=\"http://htmlpreview.github.io/?https://github.com/slawekradzyminski/AwesomeTesting/blob/f1c66b7f569ef09b70c11ee9e0400b6947f77203/src/test/java/com/awesome/testing/performance/lighthouse/Mobile-report.html\" target=\"_blank\" rel=\"noreferrer\">Link to Mobile report</a></p><p>As you can see performance of my blog is really good :)</p><img src=\"/images/blog/wOjmmz3BCDKC1856YSLjtk3JH-OedzNnVT20-Eq0fZpWmVZ4rWtcopwAOLu1Ig0jZSA6fR2eWy1h9lsD_A8zSFuDdPTfyy2xQqJrL70nhiHbbdgTga7Tzt0j1sCrPZdQnFyhH7dx\" alt=\"\">\n\n<h2>Useful options</h2>\n<p>a) Passing headers (can be used to get logged in pages)</p><p><code>lighthouse \\--extra-headers &quot;{\\\\&quot;Cookie\\\\&quot;:\\\\&quot;monster=blue\\\\&quot;}&quot;</code></p><p>b) Passing chrome flags</p><p>Every single one of <a href=\"https://peter.sh/experiments/chromium-command-line-switches/\" target=\"_blank\" rel=\"noreferrer\">Chromium Command Line Switches</a> can be used</p><p><code>lighthouse \\--chrome-flags=&#39;--start-maximized&#39;</code></p><h2>Continuous Integration usage</h2>\n<p>As with almost everything related to automated tests we would like to add them into Continuous Integration. Lighthouse allows it! See <a href=\"https://github.com/GoogleChrome/lighthouse/blob/master/docs/readme.md#using-programmatically\" target=\"_blank\" rel=\"noreferrer\">official guide</a> for details.</p><p>Quick win, isn&#39;t it?</p>"
}